name: Unit tests of MEWS by pytest on several platforms
on: [push]
jobs:  
  RunMEWSpytest:
    strategy:
      matrix:
        # run all 3 major platforms  removed: macos-latest, ubuntu-latest 
        os: [windows-latest, macos-13, ubuntu-latest]
        pyversion: ['3.9', '3.10', '3.11', '3.12', '3.13']
  
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        #with: 
        #  ref: develop 
      - name: Install Python3
        uses: actions/setup-python@v1
        with:
           python-version: ${{ matrix.pyversion }}
      - name: Install dependencies
        run: |
           python -m pip install --upgrade pip
           pip install -e .[test]
      - name: run tests with pytest
        run: |
           pytest 
           #--doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      #- run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      #- name: List files in the repository
      #  run: |
      #    ls ${{ github.workspace }}
      #- run: echo "This job's status is ${{ job.status }}."
      #- name: Upload pytest test results
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: pytest-results-${{ matrix.python-version }}
      #    path: junit/test-results-${{ matrix.python-version }}.xml
      #  # Use always() to always run this step to publish test results when there are test failures
      #  if: ${{ always() }}
      
